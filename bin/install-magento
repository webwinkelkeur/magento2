#!/usr/bin/env bash

set -euo pipefail
cd "$(dirname "$0")/.."

if [[ ! ${COMPOSE_PROFILES+x} ]]; then
	echo "Define COMPOSE_PROFILES so that Docker Compose picks the correct PHP image" >&2
	exit 1
fi

docker compose up -d

magento_version='2.4.4'
php_version=$(docker exec magento2_web php -r 'echo PHP_VERSION;')

if [[ $# -eq 1 ]]; then
	magento_version="$1"
elif [[ $# -gt 1 ]]; then
	echo "Usage: $0 [version]" >&2
	exit 1
fi

echo "Installing Magento ${magento_version} on PHP ${php_version}..." >&2

rm -rf www

cleanup() {
	if [[ -f composer-home/auth.json ]]; then
		mkdir -p ~/.composer
		cp composer-home/auth.json ~/.composer || true
	fi
	rm -f composer-home/auth.json
}
trap cleanup EXIT
cleanup

mkdir -p composer-home/cache
if [[ -f ~/.composer/auth.json ]]; then
	cp ~/.composer/auth.json composer-home
fi

docker exec -it \
	magento2_web \
	sudo -u www-data env \
	COMPOSER_MEMORY_LIMIT=-1 \
	COMPOSER_HOME=/data/composer-home \
	composer create-project \
	--repository-url=https://repo.magento.com/ \
	"magento/project-community-edition=$magento_version" \
	/data/www

cp composer-home/auth.json ~/.composer || true

mysql_opts=( -h 127.0.0.1 -P 26066 -u root --skip-password )

while ! mysql "${mysql_opts[@]}" </dev/null; do
	echo "Waiting for MariaDB to come online..." >&2
	sleep 0.5
done

mysql "${mysql_opts[@]}" <<-EOF
	DROP DATABASE IF EXISTS magento;
	CREATE DATABASE magento;
EOF

install_args=(
	--base-url=http://localhost:26065
	--db-host=mariadb
	--db-name=magento
	--db-user=root
	--admin-firstname=Admin
	--admin-lastname=Admin
	--admin-email=info@webwinkelkeur.nl
	--admin-user=admin
	--admin-password=admin123
	--language=en_US
	--currency=EUR
	--timezone=Europe/Amsterdam
	--use-rewrites=1
	--backend-frontname=admin
)

if [[ ! $magento_version =~ ^2\.[0-3]\. ]]; then
	install_args+=( --elasticsearch-host=elasticsearch )
fi

bin/magento setup:install "${install_args[@]}"
bin/magento config:set dev/template/allow_symlink 1
bin/magento cache:clean
